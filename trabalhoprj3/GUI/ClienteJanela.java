package trabalhoprj3.GUI;

import trabalhoprj3.Classes.Mensagens;
import trabalhoprj3.Executar.SocketCliente;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.net.Socket;
import java.util.Set;
import javax.swing.*;
import trabalhoprj3.OperacaoServidor;


public class ClienteJanela extends javax.swing.JFrame {
    private Socket socket;
    private Mensagens mensagem;
    private SocketCliente cliente;

    public ClienteJanela() {
        initComponents();
        this.getRootPane().setDefaultButton(buConectar);
    }

    private class ListenerSocket implements Runnable {
        private ObjectInputStream input;
        public ListenerSocket(Socket socket) {
            try {
                this.input = new ObjectInputStream(socket.getInputStream());
            } catch (IOException ex) {
            }
        }

        @Override
        public void run() {
            Mensagens mensagem = null;
            try {
                while ((mensagem = (Mensagens) input.readObject()) != null) {
                    OperacaoServidor operacao = mensagem.obterOperacao();
                    if (operacao.equals(OperacaoServidor.CONECTAR)) {
                        conectado(mensagem);
                    } else if (operacao.equals(OperacaoServidor.DESCONECTAR)) {
                        desconectado();
                        socket.close();
                    } else if (operacao.equals(OperacaoServidor.ENVIAR_UM)) {
                        receber(mensagem);
                    } else if (operacao.equals(OperacaoServidor.CLIENTES_ONLINE)) {
                        atualizarOnlines(mensagem);
                    }
                }
            } catch (IOException ex) {
            } catch (ClassNotFoundException ex) {
            }
        }
    }

    private void conectado(Mensagens mensagem) {
        if (mensagem.obterTexto().equals("NAO")) {
            this.edNome.setText("");
            JOptionPane.showMessageDialog(this, "Nome j√° extistente.");
            return;
        }
        this.getRootPane().setDefaultButton(buEnviar);
        this.mensagem = mensagem;
        this.buConectar.setEnabled(false);
        this.edNome.setEditable(false);
        this.buSair.setEnabled(true);
        this.AreaEnviar.setEnabled(true);
        this.AreaTexto.setEnabled(true);
        this.buEnviar.setEnabled(true);
        JOptionPane.showMessageDialog(this, "Conectado!");
    }

    private void desconectado() {
        this.getRootPane().setDefaultButton(buConectar);
        this.buConectar.setEnabled(true);
        this.edNome.setEditable(true);
        this.buSair.setEnabled(false);
        this.AreaEnviar.setEnabled(false);
        this.AreaTexto.setEnabled(false);
        this.buEnviar.setEnabled(false);
        this.AreaTexto.setText("");
        this.AreaEnviar.setText("");
        JOptionPane.showMessageDialog(this, "Desconectado!");
    }

    private void receber(Mensagens mensagem) {
        this.AreaTexto.append(mensagem.obterNome() + ":" + mensagem.obterTexto() + "\n");
    }

    private void atualizarOnlines(Mensagens mensagem) {
        Set<String> names = mensagem.obterClientes();
        names.remove(mensagem.obterNome());
        String[] array = (String[]) names.toArray(new String[names.size()]);
        this.AreaOnline.setListData(array);
        this.AreaOnline.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.AreaOnline.setLayoutOrientation(JList.VERTICAL);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        AreaOnline = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaTexto = new javax.swing.JTextArea();
        buEnviar = new javax.swing.JButton();
        buSair = new javax.swing.JButton();
        edNome = new javax.swing.JTextField();
        buConectar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        AreaEnviar = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane3.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane3.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        jScrollPane3.setViewportView(AreaOnline);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        AreaTexto.setEditable(false);
        AreaTexto.setColumns(20);
        AreaTexto.setRows(5);
        AreaTexto.setEnabled(false);
        jScrollPane1.setViewportView(AreaTexto);

        buEnviar.setText("Enviar");
        buEnviar.setEnabled(false);
        buEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buEnviarActionPerformed(evt);
            }
        });

        buSair.setText("Sair");
        buSair.setEnabled(false);
        buSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buSairActionPerformed(evt);
            }
        });

        edNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edNomeActionPerformed(evt);
            }
        });

        buConectar.setText("Conectar");
        buConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buConectarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome:");

        jLabel2.setText("Pessoas Online:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(edNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buConectar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 488, Short.MAX_VALUE)
                    .addComponent(AreaEnviar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(buEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buSair, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buConectar)
                    .addComponent(jLabel1)
                    .addComponent(buSair))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 332, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buEnviar)
                    .addComponent(AreaEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buConectarActionPerformed
        String nome = this.edNome.getText();
        if (!nome.isEmpty()) {
            this.mensagem = new Mensagens();
            this.mensagem.atualizarOperacao(OperacaoServidor.CONECTAR);
            this.mensagem.atualizarNome(nome);
            this.cliente = new SocketCliente();
            this.socket = this.cliente.conectar();
            new Thread(new ListenerSocket(this.socket)).start();
            this.cliente.enviar(mensagem);
        }
    }//GEN-LAST:event_buConectarActionPerformed

    private void buSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buSairActionPerformed
        Mensagens mensagem = new Mensagens();
        mensagem.atualizarNome(this.mensagem.obterNome());
        mensagem.atualizarOperacao(OperacaoServidor.DESCONECTAR);
        this.cliente.enviar(mensagem);
        desconectado();
    }//GEN-LAST:event_buSairActionPerformed

    private void buEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buEnviarActionPerformed
        String texto = this.AreaEnviar.getText();
        String nome = this.mensagem.obterNome();
        this.mensagem = new Mensagens();
        if (this.AreaOnline.getSelectedIndex() > -1) {
            this.mensagem.atualizarNomeExistente((String) this.AreaOnline.getSelectedValue());
            this.mensagem.atualizarOperacao(OperacaoServidor.ENVIAR_UM);
            this.AreaOnline.clearSelection();
        } else {
            this.mensagem.atualizarOperacao(OperacaoServidor.ENVIAR_TODOS);
        }
        if (!texto.isEmpty()) {
            this.mensagem.atualizarNome(nome);
            this.mensagem.atualizarTexto(texto);
            if(this.mensagem.obterOperacao() == OperacaoServidor.ENVIAR_UM){
                this.AreaTexto.append("- privado -\n");
            }
            this.AreaTexto.append("Voc√™:" + texto + "\n");
            this.cliente.enviar(this.mensagem);
        }
        
        this.AreaEnviar.setText("");
    }//GEN-LAST:event_buEnviarActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (this.mensagem != null){
            Mensagens mensagem = new Mensagens();
            mensagem.atualizarNome(this.mensagem.obterNome());
            mensagem.atualizarOperacao(OperacaoServidor.DESCONECTAR);
            this.cliente.enviar(mensagem);
            desconectado();
        }
    }//GEN-LAST:event_formWindowClosing

    private void edNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_edNomeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField AreaEnviar;
    private javax.swing.JList AreaOnline;
    private javax.swing.JTextArea AreaTexto;
    private javax.swing.JButton buConectar;
    private javax.swing.JButton buEnviar;
    private javax.swing.JButton buSair;
    private javax.swing.JTextField edNome;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
}
